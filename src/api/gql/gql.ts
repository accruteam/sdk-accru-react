/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    automatic_push_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n": types.OrganizationAcctProviderConnFragmentFragmentDoc,
    "\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    trigger_code\n    pull\n    push\n    errors\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n    local_read_success_count\n    local_create_success_count\n    local_update_success_count\n    local_delete_success_count\n    local_read_failure_count\n    local_create_failure_count\n    local_update_failure_count\n    local_delete_failure_count\n    remote_read_success_count\n    remote_create_success_count\n    remote_update_success_count\n    remote_delete_success_count\n    remote_read_failure_count\n    remote_create_failure_count\n    remote_update_failure_count\n    remote_delete_failure_count\n    sync_cluster_code\n    status_description\n    created_at\n    updated_at\n    organization_id\n    organization_acct_provider_conn_id\n  }\n": types.OrganizationAcctProviderConnSynchronizationFragmentFragmentDoc,
    "\n  mutation UserOrganizationAcctProviderConnConfigurationPullOptionsGet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPullOptionsGet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": types.UserOrganizationAcctProviderConnConfigurationPullOptionsGetDocument,
    "\n  mutation UserOrganizationAcctProviderConnConfigurationPullOptionsSet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $payload: JSON!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPullOptionsSet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      payload: $payload\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnConfigurationPullOptionsSetDocument,
    "\n  mutation UserOrganizationAcctProviderConnConfigurationPushOptionsGet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPushOptionsGet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": types.UserOrganizationAcctProviderConnConfigurationPushOptionsGetDocument,
    "\n  mutation UserOrganizationAcctProviderConnConfigurationPushOptionsSet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $payload: JSON!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPushOptionsSet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      payload: $payload\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnConfigurationPushOptionsSetDocument,
    "\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnDisconnectDocument,
    "\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnUpdateDocument,
    "\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n    $automaticPush: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n      automatic_push_enabled: $automaticPush\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderConnectDocument,
    "\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n": types.UserOrganizationAcctProviderGetOAuthUrlDocument,
    "\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $pull: Boolean!\n    $push: Boolean!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      pull: $pull\n      push: $push\n    )\n  }\n": types.UserOrganizationAcctProviderSynchronizeDocument,
    "\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": types.UserOrganizationAcctProvidersDocument,
    "\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n": types.UserOrganizationAcctProviderDocument,
    "\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": types.UserOrganizationAcctProviderSynchronizationsDocument,
    "\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n": types.UserOrganizationAcctProviderSynchronizationDocument,
    "\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n": types.UserSessionsCloseDocument,
    "\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n    }\n  }\n": types.UnauthorizedUserOrganizationUserInviteDocument,
    "\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n": types.UserSignUpWithEmailStartDocument,
    "\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n": types.UserSignUpWithEmailVerifyDocument,
    "\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n": types.UserOrganizationUserInviteAcceptDocument,
    "\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n": types.UserSignUpWithEmailFinishSchemaDocument,
    "\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n": types.UserPasswordResetStartDocument,
    "\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n": types.UserPasswordResetFinishDocument,
    "\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n": types.UserAuthProviderGetOAuthUrlDocument,
    "\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n": types.UserAuthProviderGetOAuthTokenDocument,
    "\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    archived_at\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    organization_acct_provider_conn_bills {\n      id\n      code\n      balance\n      payload\n      last_sync_at\n      last_sync_success\n      last_sync_id\n\n      organization_bill_id\n\n      organization_acct_provider_conn_id\n      organization_acct_provider_conn {\n        acct_provider\n      }\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n": types.OrganizationBillFragmentFragmentDoc,
    "\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      status: $status\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      vendor_organization_id\n      vendor_organization {\n        id\n        name\n      }\n      customer_organization_vendor_id\n      customer_organization_vendor {\n        id\n        name\n      }\n      customer_organization_id\n      customer_organization {\n        id\n        name\n      }\n      data {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationBillFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n": types.UserOrganizationBillSummaryDocument,
    "\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n": types.UserOrganizationBillDocument,
    "\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n": types.UserOrganizationBillCreateDocument,
    "\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n": types.OrganizationConnectionFragmentFragmentDoc,
    "\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UserOrganizationConnectionsDocument,
    "\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionDocument,
    "\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionInviteCustomerDocument,
    "\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionInviteVendorDocument,
    "\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionAcceptDocument,
    "\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n": types.UserOrganizationConnectionRejectDocument,
    "\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerConnLockDocument,
    "\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerConnUnlockDocument,
    "\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorConnLockDocument,
    "\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorConnUnlockDocument,
    "\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.userOrganizationVendorContactsDocument,
    "\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n": types.UserOrganizationCustomerContactsDocument,
    "\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n": types.userOrganizationVendorContactCreateDocument,
    "\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": types.UserOrganizationCustomerContactCreateDocument,
    "\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n": types.UserOrganizationVendorContactUpdateDocument,
    "\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": types.UserOrganizationCustomerContactUpdateDocument,
    "\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n": types.UserOrganizationVendorContactDeleteDocument,
    "\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n": types.UserOrganizationCustomerContactDeleteDocument,
    "\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n": types.OrganizationCustomerFragmentFragmentDoc,
    "\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n": types.UserOrganizationCustomersDocument,
    "\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n": types.UserOrganizationCustomerStatementDocument,
    "\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": types.UserOrganizationCustomerStatementLineDocument,
    "\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerDocument,
    "\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerUpdateDocument,
    "\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n": types.UserOrganizationCustomerCreateDocument,
    "\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n": types.UserOrganizationCustomerSendStatementEmailDocument,
    "\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n": types.UserOrganizationCustomerGetStatementLinkDocument,
    "\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    customer_email\n    customer_address_line_1\n    customer_address_number\n    customer_address_line_2\n    customer_address_city\n    customer_address_state\n    customer_address_zip_code\n    customer_address_country_code_iso_3\n    customer_address_lat\n    customer_address_lng\n    archived_at\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    organization_acct_provider_conn_invoices {\n      id\n      code\n      balance\n      payload\n      last_sync_at\n      last_sync_success\n      last_sync_id\n\n      organization_invoice_id\n\n      organization_acct_provider_conn_id\n      organization_acct_provider_conn {\n        acct_provider\n      }\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n": types.OrganizationInvoiceFragmentFragmentDoc,
    "\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      status: $status\n      is_overdue: $isOverdue\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      vendor_organization_id\n      vendor_organization {\n        id\n        name\n      }\n      vendor_organization_customer_id\n      vendor_organization_customer {\n        id\n        name\n      }\n      customer_organization_id\n      customer_organization {\n        id\n        name\n      }\n      data {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationInvoiceFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n": types.UserOrganizationInvoiceSummaryDocument,
    "\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n": types.UserOrganizationInvoiceDocument,
    "\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      archived_at\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n": types.UserOrganizationInvoiceCreateDocument,
    "\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n": types.UserOrganizationCustomerSendInvoiceEmailDocument,
    "\n  mutation UserOrganizationInvoiceGetAcctProviderPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationInvoiceGetAcctProviderPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserOrganizationInvoiceGetAcctProviderPDFDocument,
    "\n  mutation UserOrganizationInvoiceGetBalanceSnapshot(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoiceGetBalanceSnapshot(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    )\n  }\n": types.UserOrganizationInvoiceGetBalanceSnapshotDocument,
    "\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n    subscription_level\n    archived_at\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n    current_email_verification_id\n    current_phone_number_verification_id\n  }\n": types.OrganizationFragmentFragmentDoc,
    "\n  fragment OrganizationCollaboratorFragment on OrganizationUser {\n    id\n    role\n    send_invoice_reminders\n    archived_at\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n": types.OrganizationCollaboratorFragmentFragmentDoc,
    "\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n": types.UserOrganizationDocument,
    "\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n": types.UserOrganizationBaseSettingsDocument,
    "\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n": types.UserOrganizationCreateDocument,
    "\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationCollaboratorFragment\n    }\n  }\n": types.UserOrganizationCollaboratorsDocument,
    "\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n": types.UserOrganizationInviteCollaboratorCreateDocument,
    "\n  query UserOrganizationInviteCollaborators($organizationId: String!, $skip: Int, $take: Int) {\n    userOrganizationInviteCollaborators(organization_id: $organizationId, skip: $skip, take: $take) {\n      id\n      email\n      role\n      code\n      expires_at\n      accepted_at\n      canceled_at\n      rejected_at\n      created_at\n      updated_at\n      organization_id\n      created_by_user_id\n      created_by_user {\n        email\n      }\n    }\n  }\n": types.UserOrganizationInviteCollaboratorsDocument,
    "\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n": types.UserOrganizationCollaboratorUpdateDocument,
    "\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n": types.UserOrganizationCollaboratorDeleteDocument,
    "\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n": types.UserOrganizationUpdateDocument,
    "\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n": types.UserOrganizationLogoPictureRemoveDocument,
    "\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n": types.OrganizationReminderSettingFragmentFragmentDoc,
    "\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n": types.UserOrganizationReminderSettingsDocument,
    "\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingDocument,
    "\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingCreateDocument,
    "\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingUpdateDocument,
    "\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n": types.UserOrganizationReminderSettingDeleteDocument,
    "\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      payment_options {\n        method\n        url\n        payload\n      }\n\n      organization_acct_provider_conn_invoices {\n        organization_acct_provider_conn {\n          acct_provider\n          status\n        }\n      }\n    }\n  }\n": types.OrganizationCustomerStatementInvoiceLineFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n\n      organization_acct_provider_conn_invoice_transactions {\n        organization_acct_provider_conn {\n          acct_provider\n          status\n        }\n      }\n    }\n  }\n": types.OrganizationCustomerStatementTransactionLineFragmentFragmentDoc,
    "\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      id\n      name\n    }\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      id\n      name\n      email\n    }\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n\n    currency\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n": types.OrganizationCustomerStatementFragmentFragmentDoc,
    "\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n": types.UserCustomerOrganizationStatementDocument,
    "\n  mutation UserCustomerOrganizationStatementLineGeneratePdf(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userCustomerOrganizationStatementLineGeneratePDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserCustomerOrganizationStatementLineGeneratePdfDocument,
    "\n  mutation UnconnectedUserCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedUserCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n": types.UnconnectedUserCustomerOrganizationStatementRequestTokenDocument,
    "\n  query UnconnectedUserCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedUserCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n": types.UnconnectedUserCustomerOrganizationStatementDocument,
    "\n  mutation UnconnectedUserCustomerOrganizationStatementLinePdf(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    unconnectedUserCustomerOrganizationStatementLinePDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UnconnectedUserCustomerOrganizationStatementLinePdfDocument,
    "\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": types.UserCustomerOrganizationStatementLineDocument,
    "\n  query UnconnectedUserCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedUserCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n": types.UnconnectedUserCustomerOrganizationStatementLineDocument,
    "\n  mutation UserOrganizationInvoiceTransactionGetAcctProviderPdf(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationInvoiceTransactionGetAcctProviderPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n": types.UserOrganizationInvoiceTransactionGetAcctProviderPdfDocument,
    "\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      organization_id\n      organization {\n        subscription_level\n        name\n        email\n      }\n      role\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n": types.UserFragmentDoc,
    "\n  query User {\n    user {\n      ...User\n    }\n  }\n": types.UserDocument,
    "\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n": types.UserUpdateDataDocument,
    "\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n": types.UserEmailVerifyOrChangeStartDocument,
    "\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n": types.UserEmailVerifyOrChangeFinishDocument,
    "\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n": types.UserPhoneNumberVerifyOrChangeStartDocument,
    "\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n": types.UserPhoneNumberVerifyOrChangeFinishDocument,
    "\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n": types.UserPasswordChangeStartDocument,
    "\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n": types.UserPasswordChangeFinishDocument,
    "\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n": types.UserProfilePictureRemoveDocument,
    "\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n": types.OrganizationVendorFragmentFragmentDoc,
    "\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n": types.UserOrganizationVendorsDocument,
    "\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorDocument,
    "\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorUpdateDocument,
    "\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n": types.UserOrganizationVendorCreateDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    automatic_push_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationAcctProviderConnFragment on OrganizationAcctProviderConn {\n    id\n    acct_provider\n    code\n    payload\n    conn_expires_at\n    automatic_pull_enabled\n    automatic_push_enabled\n    disconnected_at\n    created_at\n    updated_at\n    organization_id\n    status\n\n    synchronizations(skip: 0, take: 1, finished: true) {\n      edges {\n        node {\n          ...OrganizationAcctProviderConnSynchronizationFragment\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    trigger_code\n    pull\n    push\n    errors\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n    local_read_success_count\n    local_create_success_count\n    local_update_success_count\n    local_delete_success_count\n    local_read_failure_count\n    local_create_failure_count\n    local_update_failure_count\n    local_delete_failure_count\n    remote_read_success_count\n    remote_create_success_count\n    remote_update_success_count\n    remote_delete_success_count\n    remote_read_failure_count\n    remote_create_failure_count\n    remote_update_failure_count\n    remote_delete_failure_count\n    sync_cluster_code\n    status_description\n    created_at\n    updated_at\n    organization_id\n    organization_acct_provider_conn_id\n  }\n"): (typeof documents)["\n  fragment OrganizationAcctProviderConnSynchronizationFragment on OrganizationAcctProviderConnSynchronization {\n    id\n    trigger_code\n    pull\n    push\n    errors\n    started_at\n    finished_at\n    failed_at\n    succeeded_at\n    local_read_success_count\n    local_create_success_count\n    local_update_success_count\n    local_delete_success_count\n    local_read_failure_count\n    local_create_failure_count\n    local_update_failure_count\n    local_delete_failure_count\n    remote_read_success_count\n    remote_create_success_count\n    remote_update_success_count\n    remote_delete_success_count\n    remote_read_failure_count\n    remote_create_failure_count\n    remote_update_failure_count\n    remote_delete_failure_count\n    sync_cluster_code\n    status_description\n    created_at\n    updated_at\n    organization_id\n    organization_acct_provider_conn_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnConfigurationPullOptionsGet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPullOptionsGet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnConfigurationPullOptionsGet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPullOptionsGet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnConfigurationPullOptionsSet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $payload: JSON!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPullOptionsSet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      payload: $payload\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnConfigurationPullOptionsSet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $payload: JSON!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPullOptionsSet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      payload: $payload\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnConfigurationPushOptionsGet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPushOptionsGet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnConfigurationPushOptionsGet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPushOptionsGet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnConfigurationPushOptionsSet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $payload: JSON!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPushOptionsSet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      payload: $payload\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnConfigurationPushOptionsSet(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $payload: JSON!\n  ) {\n    userOrganizationAcctProviderConnConfigurationPushOptionsSet(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      payload: $payload\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnDisconnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderConnDisconnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnUpdate(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $data: UserOrganizationAcctProviderConnUpdateSchema!\n  ) {\n    userOrganizationAcctProviderConnUpdate(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      data: $data\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n    $automaticPush: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n      automatic_push_enabled: $automaticPush\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderConnect(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $url: String!\n    $automaticPull: Boolean!\n    $automaticPush: Boolean!\n  ) {\n    userOrganizationAcctProviderConnect(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      url: $url\n      automatic_pull_enabled: $automaticPull\n      automatic_push_enabled: $automaticPush\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderGetOAuthUrl(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationAcctProviderGetOAuthUrl(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $pull: Boolean!\n    $push: Boolean!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      pull: $pull\n      push: $push\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationAcctProviderSynchronize(\n    $organizationId: String!\n    $accountProvider: ACCT_PROVIDER!\n    $pull: Boolean!\n    $push: Boolean!\n  ) {\n    userOrganizationAcctProviderSynchronize(\n      organization_id: $organizationId\n      acct_provider: $accountProvider\n      pull: $pull\n      push: $push\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"): (typeof documents)["\n  query UserOrganizationAcctProviders(\n    $organizationId: String!,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviders(\n        organization_id: $organizationId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationAcctProvider(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String!\n  ) {\n    userOrganizationAcctProvider(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_id: $organizationAcctProviderConnId\n    ) {\n      ...OrganizationAcctProviderConnFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"): (typeof documents)["\n  query UserOrganizationAcctProviderSynchronizations(\n    $organizationId: String!,\n    $organizationAcctProviderConnId: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationAcctProviderSynchronizations(\n        organization_id: $organizationId\n        organization_acct_provider_conn_id: $organizationAcctProviderConnId\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationAcctProviderConnSynchronizationFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationAcctProviderSynchronization(\n    $organizationId: String!,\n    $organizationAcctProviderConnSynchronizationId: String!\n  ) {\n    userOrganizationAcctProviderSynchronization(\n      organization_id: $organizationId,\n      organization_acct_provider_conn_synchronization_id: $organizationAcctProviderConnSynchronizationId\n    ) {\n      ...OrganizationAcctProviderConnSynchronizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation UserSessionsClose {\n    userSessionsClose {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n    }\n  }\n"): (typeof documents)["\n  query UnauthorizedUserOrganizationUserInvite(\n    $code: String!\n    $email: String!\n    $organizationId: String!\n    $organizationInviteId: String!\n  ) {\n    unauthorizedUserOrganizationUserInvite(\n      code: $code\n      email: $email\n      organization_id: $organizationId\n      organization_invite_id: $organizationInviteId\n    ) {\n      invited_by\n      organization_name\n      organization_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserSignUpWithEmailStart($data: UserSignUpWithEmailStartSchema!) {\n    userSignUpWithEmailStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserSignUpWithEmailVerify($data: UserSignUpWithEmailVerifySchema!) {\n    userSignUpWithEmailVerify(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationUserInviteAccept(\n    $code: String!\n    $organizationInviteId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationUserInviteAccept(\n      code: $code\n      organization_invite_id: $organizationInviteId\n      organization_id: $organizationId\n    ) {\n      role\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserSignUpWithEmailFinishSchema(\n    $data: UserSignUpWithEmailFinishSchema!\n  ) {\n    userSignUpWithEmailFinish(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPasswordResetStart($data: UserPasswordResetStartSchema!) {\n    userPasswordResetStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n"): (typeof documents)["\n  mutation UserPasswordResetFinish($userPasswordResetFinishData2: UserPasswordResetFinishSchema!) {\n    userPasswordResetFinish(data: $userPasswordResetFinishData2)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n"): (typeof documents)["\n  mutation UserAuthProviderGetOAuthUrl($authProvider: AUTH_PROVIDER!) {\n    userAuthProviderGetOAuthUrl(auth_provider: $authProvider)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n"): (typeof documents)["\n  mutation UserAuthProviderGetOAuthToken($authProvider: AUTH_PROVIDER!, $authorizationToken: String!) {\n    userAuthProviderGetOAuthToken(auth_provider: $authProvider, authorization_token: $authorizationToken)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    archived_at\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    organization_acct_provider_conn_bills {\n      id\n      code\n      balance\n      payload\n      last_sync_at\n      last_sync_success\n      last_sync_id\n\n      organization_bill_id\n\n      organization_acct_provider_conn_id\n      organization_acct_provider_conn {\n        acct_provider\n      }\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationBillFragment on OrganizationBill {\n    id\n    unique_code\n    number\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    bill_date\n    due_date\n    vendor_email\n    vendor_address_line_1\n    vendor_address_number\n    vendor_address_line_2\n    vendor_address_city\n    vendor_address_state\n    vendor_address_zip_code\n    vendor_address_country_code_iso_3\n    vendor_address_lat\n    vendor_address_lng\n    archived_at\n    created_at\n    updated_at\n\n    conn_linked_invoice_id\n    conn_locked_data_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_vendor_id\n    organization_vendor {\n      name\n      email\n      balance\n    }\n\n    organization_acct_provider_conn_bills {\n      id\n      code\n      balance\n      payload\n      last_sync_at\n      last_sync_success\n      last_sync_id\n\n      organization_bill_id\n\n      organization_acct_provider_conn_id\n      organization_acct_provider_conn {\n        acct_provider\n      }\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    transaction_links {\n      id\n      amount\n      organization_bill_id\n\n      created_at\n      updated_at\n\n      organization_bill_transaction_id\n      organization_bill_transaction {\n        id\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      status: $status\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      vendor_organization_id\n      vendor_organization {\n        id\n        name\n      }\n      customer_organization_vendor_id\n      customer_organization_vendor {\n        id\n        name\n      }\n      customer_organization_id\n      customer_organization {\n        id\n        name\n      }\n      data {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationBillFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationBillSummary(\n    $organizationId: String!\n    $organizationVendorId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $status: BILL_STATUS\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationBillSummary(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      status: $status\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      vendor_organization_id\n      vendor_organization {\n        id\n        name\n      }\n      customer_organization_vendor_id\n      customer_organization_vendor {\n        id\n        name\n      }\n      customer_organization_id\n      customer_organization {\n        id\n        name\n      }\n      data {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationBillFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationBill(\n    $organizationId: String!\n    $organizationBillId: String!\n  ) {\n    userOrganizationBill(\n      organization_id: $organizationId\n      organization_bill_id: $organizationBillId\n    ) {\n      ...OrganizationBillFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationBillCreate(\n    $organizationId: String!\n    $data: UserOrganizationBillSchema!\n  ) {\n    userOrganizationBillCreate(organization_id: $organizationId, data: $data) {\n      ...OrganizationBillFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n"): (typeof documents)["\n  fragment OrganizationConnectionFragment on OrganizationConnection {\n    id\n\n    is_valid\n    is_connected\n\n    vendor_conn_status\n    vendor_conn_status_at\n    vendor_organization_id\n    vendor_organization_name\n    vendor_organization_email\n    vendor_target_customer_id\n    vendor_target_customer_name\n    vendor_target_customer_email\n\n    customer_conn_status\n    customer_conn_status_at\n    customer_organization_id\n    customer_organization_name\n    customer_organization_email\n    customer_target_vendor_id\n    customer_target_vendor_name\n    customer_target_vendor_email\n\n    created_at\n    updated_at\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationConnections(\n    $organizationId: String!\n    $status: ORGANIZATION_CONNECTION_STATUS\n  ) {\n    userOrganizationConnections(\n      organization_id: $organizationId\n      status: $status\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          ...OrganizationConnectionFragment\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationConnection(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnection(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionInviteCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationConnectionInviteCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionInviteVendor(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationConnectionInviteVendor(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionAccept(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionAccept(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationConnectionReject(\n    $organizationId: String!\n    $organizationConnectionId: String!\n  ) {\n    userOrganizationConnectionReject(\n      organization_id: $organizationId\n      organization_connection_id: $organizationConnectionId\n    ) {\n      ...OrganizationConnectionFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerConnLock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnLock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerConnUnlock(\n    $organizationId: String!\n    $organizationCustomerId: String!\n  ) {\n    userOrganizationCustomerConnUnlock(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorConnLock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnLock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorConnUnlock(\n    $organizationId: String!\n    $organizationVendorId: String!\n  ) {\n    userOrganizationVendorConnUnlock(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query userOrganizationVendorContacts(\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContacts(\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          email\n          id\n          is_default\n          name\n          phone_number\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomerContacts(\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContacts(\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          name\n          email\n          phone_number\n          is_default\n          send_invoice_reminders\n          created_at\n          updated_at\n          organization_customer_id\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n"): (typeof documents)["\n  mutation userOrganizationVendorContactCreate(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $data: UserOrganizationVendorContactCreateSchema!\n  ) {\n    userOrganizationVendorContactCreate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      organization_vendor_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerContactCreate(\n    $data: UserOrganizationCustomerContactCreateSchema!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactCreate(\n      data: $data\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorContactUpdate(\n    $data: UserOrganizationVendorContactUpdateSchema!\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactUpdate(\n      data: $data\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      is_default\n      name\n      phone_number\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerContactUpdate(\n    $data: UserOrganizationCustomerContactUpdateSchema!\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactUpdate(\n      data: $data\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorContactDelete(\n    $organizationVendorContactId: String!\n    $organizationVendorId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationVendorContactDelete(\n      organization_vendor_contact_id: $organizationVendorContactId\n      organization_vendor_id: $organizationVendorId\n      organization_id: $organizationId\n    ) {\n      email\n      id\n      name\n      organization_vendor_id\n      phone_number\n      is_default\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerContactDelete(\n    $organizationCustomerContactId: String!\n    $organizationCustomerId: String!\n    $organizationId: String!\n  ) {\n    userOrganizationCustomerContactDelete(\n      organization_customer_contact_id: $organizationCustomerContactId\n      organization_customer_id: $organizationCustomerId\n      organization_id: $organizationId\n    ) {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n      organization_customer_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerFragment on OrganizationCustomer {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      send_invoice_reminders\n      created_at\n      updated_at\n    }\n\n    invoice_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              invoice_date\n              due_date\n              customer_email\n              created_at\n              updated_at\n              status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"): (typeof documents)["\n  query UserOrganizationCustomers(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n      userOrganizationCustomers(\n        organization_id: $organizationId\n\n        name: $name\n\n        after: $after\n        first: $first\n\n        before: $before\n        last: $last\n\n        skip: $skip\n        take: $take\n\n        sorting: $sorting\n      ) {\n          totalCount\n          edges {\n            cursor\n            node {\n              ...OrganizationCustomerFragment\n            }\n          }\n          pageInfo {\n              startCursor\n              endCursor\n              hasPreviousPage\n              hasNextPage\n          }\n        }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomerStatement(\n    $organizationId: String!\n    $organizationCustomerId: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationCustomerStatement(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomerStatementLine(\n    $organizationId: String!,\n    $organizationCustomerId: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n  ) {\n    userOrganizationCustomerStatementLine(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      organization_invoice_id: $organizationInvoiceId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCustomer(\n    $organizationId: String!\n    $organizationCustomerId: String!,\n    ) {\n    userOrganizationCustomer(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId,\n      ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerUpdate($organizationId: String!, $organizationCustomerId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerUpdate(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerCreate($organizationId: String!, $data: UserOrganizationCustomerSchema!) {\n    userOrganizationCustomerCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationCustomerFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerSendStatementEmail($targets: [UserOrganizationCustomerSendStatementEmailSchema!]!, $organizationId: String!) {\n    userOrganizationCustomerSendStatementEmail(targets: $targets, organization_id: $organizationId)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerGetStatementLink($organizationId: String!, $organizationCustomerId: String!, $expiresAt: DateTime) {\n    userOrganizationCustomerGetStatementLink(organization_id: $organizationId, organization_customer_id: $organizationCustomerId, expires_at: $expiresAt)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    customer_email\n    customer_address_line_1\n    customer_address_number\n    customer_address_line_2\n    customer_address_city\n    customer_address_state\n    customer_address_zip_code\n    customer_address_country_code_iso_3\n    customer_address_lat\n    customer_address_lng\n    archived_at\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    organization_acct_provider_conn_invoices {\n      id\n      code\n      balance\n      payload\n      last_sync_at\n      last_sync_success\n      last_sync_id\n\n      organization_invoice_id\n\n      organization_acct_provider_conn_id\n      organization_acct_provider_conn {\n        acct_provider\n      }\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationInvoiceFragment on OrganizationInvoice {\n    id\n    unique_code\n    number\n    currency_code\n    description\n    payload\n    amount\n    tax_amount\n    discount_amount\n    total_amount\n    invoice_date\n    due_date\n    customer_email\n    customer_address_line_1\n    customer_address_number\n    customer_address_line_2\n    customer_address_city\n    customer_address_state\n    customer_address_zip_code\n    customer_address_country_code_iso_3\n    customer_address_lat\n    customer_address_lng\n    archived_at\n    created_at\n    updated_at\n\n    organization_id\n    organization {\n      name\n    }\n    organization_customer_id\n    organization_customer {\n      name\n      email\n      balance\n    }\n\n    organization_acct_provider_conn_invoices {\n      id\n      code\n      balance\n      payload\n      last_sync_at\n      last_sync_success\n      last_sync_id\n\n      organization_invoice_id\n\n      organization_acct_provider_conn_id\n      organization_acct_provider_conn {\n        acct_provider\n      }\n    }\n\n    file_id\n    file {\n      public_url\n    }\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    status\n    is_overdue\n    paid_amount\n    paid_at\n    balance\n\n    email_sent_at\n\n    payment_options {\n        method\n        url\n        payload\n    }\n\n    transaction_links {\n      id\n      amount\n      organization_invoice_id\n\n      created_at\n      updated_at\n\n      organization_invoice_transaction_id\n      organization_invoice_transaction {\n        id\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      status: $status\n      is_overdue: $isOverdue\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      vendor_organization_id\n      vendor_organization {\n        id\n        name\n      }\n      vendor_organization_customer_id\n      vendor_organization_customer {\n        id\n        name\n      }\n      customer_organization_id\n      customer_organization {\n        id\n        name\n      }\n      data {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationInvoiceFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationInvoiceSummary(\n    $organizationId: String!\n    $organizationCustomerId: String\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $status: INVOICE_STATUS\n    $isOverdue: Boolean\n    $customerName: String\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationInvoiceSummary(\n      organization_id: $organizationId\n      organization_customer_id: $organizationCustomerId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      status: $status\n      is_overdue: $isOverdue\n      customer_name: $customerName\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      vendor_organization_id\n      vendor_organization {\n        id\n        name\n      }\n      vendor_organization_customer_id\n      vendor_organization_customer {\n        id\n        name\n      }\n      customer_organization_id\n      customer_organization {\n        id\n        name\n      }\n      data {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationInvoiceFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasPreviousPage\n          hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationInvoice(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoice(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    ) {\n      ...OrganizationInvoiceFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      archived_at\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceCreate(\n    $data: UserOrganizationInvoiceSchema!\n    $organizationId: String!\n  ) {\n    userOrganizationInvoiceCreate(\n      data: $data\n      organization_id: $organizationId\n    ) {\n      amount\n      archived_at\n      balance\n      created_at\n      currency_code\n      id\n      is_overdue\n      invoice_date\n      status\n      email_sent_at\n      paid_at\n      paid_amount\n      total_amount\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCustomerSendInvoiceEmail(\n    $organizationId: String!\n    $targets: [UserOrganizationCustomerSendInvoiceEmailSchema!]!\n  ) {\n    userOrganizationCustomerSendInvoiceEmail(\n      organization_id: $organizationId\n      targets: $targets\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceGetAcctProviderPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationInvoiceGetAcctProviderPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceGetAcctProviderPDF(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationInvoiceGetAcctProviderPDF(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceGetBalanceSnapshot(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoiceGetBalanceSnapshot(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceGetBalanceSnapshot(\n    $organizationId: String!\n    $organizationInvoiceId: String!\n  ) {\n    userOrganizationInvoiceGetBalanceSnapshot(\n      organization_id: $organizationId\n      organization_invoice_id: $organizationInvoiceId\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n    subscription_level\n    archived_at\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n    current_email_verification_id\n    current_phone_number_verification_id\n  }\n"): (typeof documents)["\n  fragment OrganizationFragment on Organization {\n    id\n    name\n    email\n    unique_name\n    unique_code\n    phone_number\n    address_line_1\n    address_number\n    address_line_2\n    address_city\n    address_state\n    address_zip_code\n    address_country_code_iso_3\n    address_lat\n    address_lng\n    primary_contact_name\n    business_name\n    business_industry\n    business_number_of_employees\n    business_address_line_1\n    business_address_number\n    business_address_line_2\n    business_address_city\n    business_address_state\n    business_address_zip_code\n    business_address_country_code_iso_3\n    business_address_lat\n    business_address_lng\n    business_tax_code_type\n    business_tax_code\n    timezone\n    language\n    subscription_level\n    archived_at\n    created_at\n    updated_at\n\n    logo_picture_file_id\n    logo_picture_file {\n      public_url\n    }\n    current_email_verification_id\n    current_phone_number_verification_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCollaboratorFragment on OrganizationUser {\n    id\n    role\n    send_invoice_reminders\n    archived_at\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCollaboratorFragment on OrganizationUser {\n    id\n    role\n    send_invoice_reminders\n    archived_at\n    created_at\n    updated_at\n    organization_id\n    user_id\n    user {\n      id\n      email\n      phone_number\n      first_name\n      last_name\n      language\n      profile_picture_file_id\n      profile_picture_file {\n        public_url\n      }\n      current_email_verification_id\n      current_phone_number_verification_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganization ($organizationId: String!) {\n    userOrganization(organization_id: $organizationId) {\n      ...OrganizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationBaseSettings(\n    $organizationId: String!\n  ) {\n    userOrganization(\n      organization_id: $organizationId\n    ) {\n      setting_send_invoice_due_reminders\n      setting_send_invoice_overdue_reminders\n      setting_allow_invoice_due_snooze_reminders\n      setting_allow_invoice_overdue_snooze_reminders\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCreate($data: UserOrganizationCreateSchema!){\n    userOrganizationCreate(data: $data) {\n      id\n      email\n      name\n      phone_number\n      primary_contact_name\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationCollaboratorFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationCollaborators(\n    $organizationId: String!\n  ) {\n    userOrganizationCollaborators(\n      organization_id: $organizationId\n    ) {\n      ...OrganizationCollaboratorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInviteCollaboratorCreate($data: UserOrganizationInviteCollaboratorCreateSchema!, $organizationId: String!) {\n    userOrganizationInviteCollaboratorCreate(data: $data, organization_id: $organizationId) {\n      expires_at\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationInviteCollaborators($organizationId: String!, $skip: Int, $take: Int) {\n    userOrganizationInviteCollaborators(organization_id: $organizationId, skip: $skip, take: $take) {\n      id\n      email\n      role\n      code\n      expires_at\n      accepted_at\n      canceled_at\n      rejected_at\n      created_at\n      updated_at\n      organization_id\n      created_by_user_id\n      created_by_user {\n        email\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationInviteCollaborators($organizationId: String!, $skip: Int, $take: Int) {\n    userOrganizationInviteCollaborators(organization_id: $organizationId, skip: $skip, take: $take) {\n      id\n      email\n      role\n      code\n      expires_at\n      accepted_at\n      canceled_at\n      rejected_at\n      created_at\n      updated_at\n      organization_id\n      created_by_user_id\n      created_by_user {\n        email\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCollaboratorUpdate($data: UserOrganizationCollaboratorUpdateSchema!, $organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorUpdate(data: $data, organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      role\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationCollaboratorDelete($organizationUserId: String!, $organizationId: String!) {\n    userOrganizationCollaboratorDelete(organization_user_id: $organizationUserId, organization_id: $organizationId) {\n      id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationUpdate(\n    $organizationId: String!\n    $data: UserOrganizationUpdateSchema!\n  ) {\n    userOrganizationUpdate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationLogoPictureRemove($organizationId: String!) {\n    userOrganizationLogoPictureRemove(organization_id: $organizationId) {\n      logo_picture_file {\n        public_url\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n"): (typeof documents)["\n  fragment OrganizationReminderSettingFragment on OrganizationReminderSetting {\n    id\n    due_date_mode\n    days_amount\n    repeat_mode\n    repeat_value\n    selected_hour\n    created_at\n    updated_at\n    organization_id\n    organization_customer_id\n    organization_project_id\n    organization_invoice_id\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"): (typeof documents)["\n  query UserOrganizationReminderSettings(\n    $organizationId: String!,\n    $organizationCustomerId: String,\n    $organizationProjectId: String,\n    $organizationInvoiceId: String,\n\n    $dueDateMode: REMINDER_DUE_DATE_MODE,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userOrganizationReminderSettings(\n      organization_id: $organizationId\n\n      organization_customer_id: $organizationCustomerId\n      organization_project_id: $organizationProjectId\n      organization_invoice_id: $organizationInvoiceId\n\n      due_date_mode: $dueDateMode\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationReminderSettingFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationReminderSetting($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSetting(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingCreate($organizationId: String!, $data: UserOrganizationReminderSettingSchema!) {\n    userOrganizationReminderSettingCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingUpdate(\n    $organizationId: String!,\n    $organizationReminderSettingId: String!,\n    $data: UserOrganizationReminderSettingSchema!\n  ) {\n    userOrganizationReminderSettingUpdate(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n      data: $data\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationReminderSettingDelete($organizationId: String!, $organizationReminderSettingId: String!) {\n    userOrganizationReminderSettingDelete(\n      organization_id: $organizationId\n      organization_reminder_setting_id: $organizationReminderSettingId\n    ) {\n      ...OrganizationReminderSettingFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      payment_options {\n        method\n        url\n        payload\n      }\n\n      organization_acct_provider_conn_invoices {\n        organization_acct_provider_conn {\n          acct_provider\n          status\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerStatementInvoiceLineFragment on OrganizationCustomerStatementInvoiceLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_id\n    paid_amount\n    running_balance\n    invoice_status\n    type\n    updated_at\n\n    organization_invoice {\n      payment_options {\n        method\n        url\n        payload\n      }\n\n      organization_acct_provider_conn_invoices {\n        organization_acct_provider_conn {\n          acct_provider\n          status\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n\n      organization_acct_provider_conn_invoice_transactions {\n        organization_acct_provider_conn {\n          acct_provider\n          status\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerStatementTransactionLineFragment on OrganizationCustomerStatementTransactionLine {\n    amount\n    code\n    created_at\n    currency_code\n    date\n    due_date\n    id\n    organization_customer_id\n    organization_invoice_transaction_id\n    paid_amount\n    running_balance\n    transaction_status\n    type\n    updated_at\n\n    organization_invoice_transaction {\n      links {\n        id\n        amount\n        organization_invoice_id\n      }\n\n      organization_acct_provider_conn_invoice_transactions {\n        organization_acct_provider_conn {\n          acct_provider\n          status\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      id\n      name\n    }\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      id\n      name\n      email\n    }\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n\n    currency\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n"): (typeof documents)["\n  fragment OrganizationCustomerStatementFragment on OrganizationCustomerStatement {\n    vendor_organization_id\n    vendor_organization {\n      id\n      name\n    }\n    vendor_organization_customer_id\n    vendor_organization_customer {\n      id\n      name\n      email\n    }\n    customer_organization_id\n    customer_organization {\n      id\n      name\n    }\n    data {\n      totalCount\n      edges {\n        cursor\n        node {\n          ... on OrganizationCustomerStatementInvoiceLine {\n            ...OrganizationCustomerStatementInvoiceLineFragment\n          }\n          ... on OrganizationCustomerStatementTransactionLine {\n            ...OrganizationCustomerStatementTransactionLineFragment\n          }\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n    }\n    total_amount\n    paid_amount\n    overdue_amount\n    balance\n\n    start_date\n    end_date\n\n    currency\n\n    one_to_thirty_days_due_amount\n    thirty_one_to_sixty_days_due_amount\n    sixty_plus_days_due_amount\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"): (typeof documents)["\n  query UserCustomerOrganizationStatement(\n    $organizationId: String!\n    $organizationVendorId: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    userCustomerOrganizationStatement(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserCustomerOrganizationStatementLineGeneratePdf(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userCustomerOrganizationStatementLineGeneratePDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserCustomerOrganizationStatementLineGeneratePdf(\n    $organizationId: String!\n    $organizationVendorId: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userCustomerOrganizationStatementLineGeneratePDF(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedUserCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedUserCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n"): (typeof documents)["\n  mutation UnconnectedUserCustomerOrganizationStatementRequestToken(\n    $uniqueCode: String!\n    $email: String!\n  ) {\n    unconnectedUserCustomerOrganizationStatementRequestToken(\n      unique_code: $uniqueCode\n      email: $email\n    )\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedUserCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedUserCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"): (typeof documents)["\n  query UnconnectedUserCustomerOrganizationStatement(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n    $currency: CURRENCY\n    $startDate: DateTime\n    $endDate: DateTime\n    $isOverdue: Boolean\n    $after: ConnectionCursor\n    $first: Int\n    $before: ConnectionCursor\n    $last: Int\n    $skip: Int\n    $take: Int\n    $sorting: [SortingFieldSchema!]\n  ) {\n    unconnectedUserCustomerOrganizationStatement(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      currency: $currency\n      start_date: $startDate\n      end_date: $endDate\n      is_overdue: $isOverdue\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n      ...OrganizationCustomerStatementFragment\n  }\n}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UnconnectedUserCustomerOrganizationStatementLinePdf(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    unconnectedUserCustomerOrganizationStatementLinePDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UnconnectedUserCustomerOrganizationStatementLinePdf(\n    $uniqueCode: String!\n    $email: String!\n    $token: String!\n\n    $organizationCustomerStatementLineId: Int!,\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    unconnectedUserCustomerOrganizationStatementLinePDF(\n      unique_code: $uniqueCode\n      email: $email\n      token: $token\n\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  query UserCustomerOrganizationStatementLine(\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String!,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $organizationVendorId: String!\n  ) {\n    userCustomerOrganizationStatementLine(\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      organization_vendor_id: $organizationVendorId\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UnconnectedUserCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedUserCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"): (typeof documents)["\n  query UnconnectedUserCustomerOrganizationStatementLine(\n    $email: String!,\n    $organizationCustomerStatementLineId: Int,\n    $organizationId: String,\n    $organizationInvoiceId: String,\n    $organizationInvoiceTransactionId: String,\n    $token: String!,\n    $uniqueCode: String!\n  ) {\n    unconnectedUserCustomerOrganizationStatementLine(\n      email: $email,\n      organization_customer_statement_line_id: $organizationCustomerStatementLineId,\n      organization_id: $organizationId,\n      organization_invoice_id: $organizationInvoiceId,\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId,\n      token: $token,\n      unique_code: $uniqueCode\n    ) {\n      ... on OrganizationCustomerStatementInvoiceLine {\n        ...OrganizationCustomerStatementInvoiceLineFragment\n      }\n      ... on OrganizationCustomerStatementTransactionLine {\n        ...OrganizationCustomerStatementTransactionLineFragment\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationInvoiceTransactionGetAcctProviderPdf(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationInvoiceTransactionGetAcctProviderPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n"): (typeof documents)["\n  mutation UserOrganizationInvoiceTransactionGetAcctProviderPdf(\n    $organizationId: String!\n    $organizationInvoiceTransactionId: String!\n    $acctProvider: ACCT_PROVIDER!\n  ) {\n    userOrganizationInvoiceTransactionGetAcctProviderPDF(\n      organization_id: $organizationId\n      organization_invoice_transaction_id: $organizationInvoiceTransactionId\n      acct_provider: $acctProvider\n    )\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      organization_id\n      organization {\n        subscription_level\n        name\n        email\n      }\n      role\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n"): (typeof documents)["\n  fragment User on User {\n    id\n    email\n    organizations {\n      id\n      organization_id\n      organization {\n        subscription_level\n        name\n        email\n      }\n      role\n    }\n    first_name\n    last_name\n    language\n    phone_number\n    timezone\n    updated_at\n    created_at\n    profile_picture_file {\n      public_url\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query User {\n    user {\n      ...User\n    }\n  }\n"): (typeof documents)["\n  query User {\n    user {\n      ...User\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n"): (typeof documents)["\n  mutation UserUpdateData($data: UserUpdateDataSchema!) {\n    userUpdateData(\n      data: $data\n    ) {\n      ...User\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserEmailVerifyOrChangeStart($data: UserEmailVerifyOrChangeStartSchema!) {\n    userEmailVerifyOrChangeStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n"): (typeof documents)["\n  mutation UserEmailVerifyOrChangeFinish($data: UserEmailVerifyOrChangeFinishSchema!) {\n    userEmailVerifyOrChangeFinish(data: $data) {\n      email\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPhoneNumberVerifyOrChangeStart($data: UserPhoneNumberVerifyOrChangeStartSchema!) {\n    userPhoneNumberVerifyOrChangeStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n"): (typeof documents)["\n  mutation UserPhoneNumberVerifyOrChangeFinish($data: UserPhoneNumberVerifyOrChangeFinishSchema!) {\n    userPhoneNumberVerifyOrChangeFinish(data: $data) {\n      phone_number\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPasswordChangeStart($data: UserPasswordChangeStartSchema!) {\n    userPasswordChangeStart(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n"): (typeof documents)["\n  mutation UserPasswordChangeFinish($data: UserPasswordChangeFinishSchema!) {\n    userPasswordChangeFinish(data: $data)\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n"): (typeof documents)["\n  mutation UserProfilePictureRemove {\n    userProfilePictureRemove {\n        profile_picture_file_id\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"): (typeof documents)["\n  fragment OrganizationVendorFragment on OrganizationVendor {\n    id\n    is_active\n    email\n    name\n    unique_code\n    phone_number\n    tax_code_type\n    tax_code\n    created_at\n    updated_at\n\n    has_sync_errors\n    last_sync_at\n    latest_acct_provider_balance\n\n    conn_locked_data_at\n    connection {\n      ...OrganizationConnectionFragment\n    }\n\n    contacts {\n      id\n      name\n      email\n      phone_number\n      is_default\n      created_at\n      updated_at\n    }\n\n    bill_summary {\n      data {\n        totalCount\n        edges {\n            cursor\n            node {\n              id\n              file_id\n              file {\n                public_url\n              }\n              unique_code\n              number\n              currency_code\n              description\n              amount\n              tax_amount\n              discount_amount\n              total_amount\n              paid_amount\n              bill_date\n              due_date\n              vendor_email\n              created_at\n              updated_at\n              status\n            }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n      total_amount\n      paid_amount\n      overdue_amount\n      start_date\n      end_date\n      currency\n      status\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"): (typeof documents)["\n  query UserOrganizationVendors(\n    $organizationId: String!,\n\n    $name: String,\n\n    $after: ConnectionCursor,\n    $first: Int,\n\n    $before: ConnectionCursor,\n    $last: Int,\n\n    $skip: Int,\n    $take: Int,\n\n    $sorting: [SortingFieldSchema!]\n    ) {\n    userOrganizationVendors(\n      organization_id: $organizationId\n\n      name: $name\n\n      after: $after\n      first: $first\n\n      before: $before\n      last: $last\n\n      skip: $skip\n      take: $take\n\n      sorting: $sorting\n    ) {\n        totalCount\n        edges {\n          cursor\n          node {\n            ...OrganizationVendorFragment\n          }\n        }\n        pageInfo {\n            startCursor\n            endCursor\n            hasPreviousPage\n            hasNextPage\n        }\n      }\n    }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  query UserOrganizationVendor($organizationVendorId: String!, $organizationId: String!) {\n    userOrganizationVendor(organization_vendor_id: $organizationVendorId, organization_id: $organizationId) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorUpdate ($organizationId: String!, $organizationVendorId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorUpdate(\n      organization_id: $organizationId\n      organization_vendor_id: $organizationVendorId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"): (typeof documents)["\n  mutation UserOrganizationVendorCreate ($organizationId: String!, $data: UserOrganizationVendorSchema!) {\n    userOrganizationVendorCreate(\n      organization_id: $organizationId\n      data: $data\n    ) {\n      ...OrganizationVendorFragment\n    }\n  }\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;